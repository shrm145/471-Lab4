module decoder4x16 #(parameter WIDTH=4) (out, in, enable);
	input [3:0] in;
	input enable;
	output [15:0] out;
	
	wire [3:0] tempEnable;
	
	decoder2x4 master (.out(tempEnable), .in(in[3:2]), .enable);
	
	initial assert(WIDTH>0);
 
	genvar i;
	
	generate
		for(i=0; i<WIDTH; i++) begin : eachDec
			decoder2x4 dec (.out(out[((i*WIDTH)+(WIDTH - 1)):(i*WIDTH)]), .in(in[1:0]), .enable(tempEnable[i]));
		end
	endgenerate
	
	
	/*
	decoder2x4 dec0 (.out(out[3:0]), .in(in[1:0]), .enable(tempEnable[0]));
	decoder2x4 dec1 (.out(out[7:4]), .in(in[1:0]), .enable(tempEnable[1]));
	decoder2x4 dec2 (.out(out[11:8]), .in(in[1:0]), .enable(tempEnable[2]));
	decoder2x4 dec3 (.out(out[15:12]), .in(in[1:0]), .enable(tempEnable[3]));
	*/
	
endmodule
